@page "/client-details"
@inject SelectedClientState SelectedClientState
@inject IClientService ClientService
@rendermode InteractiveServer

<h3>Client Details</h3>

@if (SelectedClientState.SelectedClient == null)
{
    <p>No client selected.</p>
}
else
{
    var client = SelectedClientState.SelectedClient;

    <div class="card">
        @* CARD INFO *@
        <div class="card-header d-flex justify-content-between align-content-center">
            @client.Id
            <a href="/clients" class="btn btn-primary">Back</a>
        </div>
        <div class="card-body">
            <h5 class="card-title">@client.Name</h5>
            <p class="card-text">@client.Specialization</p>
        </div>

        @* ACCORDION ADDITIONAL INFO *@
        <div class="accordion">
            <div class="accordion-item">
                <h2 class="accordion-header">
                    <button class="accordion-button @(!isItemsOpen ? "collapsed" : "")"
                            @onclick="ToggleItemsAccordion"
                            type="button"
                            aria-expanded="@isItemsOpen">
                        Items
                    </button>
                </h2>
                <div class="accordion-collapse collapse @(isItemsOpen ? "show" : "")">
                    <div class="accordion-body">
                        @if (isItemsLoading)
                        {
                            <p>Loading items...</p>
                        }
                        else if (items != null)
                        {
                            <ul class="list-group">
                                @foreach (var item in items)
                                {
                                    <li class="list-group-item">
                                        <a class="nav-link" href="#">@item.Name</a>
                                    </li>
                                }
                            </ul>
                        }
                        else
                        {
                            <p>No items found.</p>
                        }
                    </div>
                </div>
            </div>
        </div>

    </div>
}


@code {
    private bool isItemsOpen = false;
    private bool isItemsLoading = false;
    private List<ItemForGettingDto> items;

    private async Task ToggleItemsAccordion()
    {
        isItemsOpen = !isItemsOpen;

        if (isItemsOpen && items == null && SelectedClientState.SelectedClient is not null)
        {
            isItemsLoading = true;

            try
            {
                var clientId = SelectedClientState.SelectedClient.Id;
                var response = await ClientService.GetItemsOfClientAsync(clientId);
                items = new();
                items.AddRange(response);
            }
            catch (Exception)
            {
                // Handle error, e.g., log or show message
            }
            finally
            {
                isItemsLoading = false;
            }
        }
    }
}