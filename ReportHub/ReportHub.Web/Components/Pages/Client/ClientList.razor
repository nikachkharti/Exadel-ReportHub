@page "/clients"
@inject IClientService ClientService
@rendermode InteractiveServer

<h3 class="text-xl font-semibold mb-4">Client List</h3>

@if (clients == null)
{
    <p>Loading clients...</p>
}
else
{
    if (clients.Any())
    {
        <table class="table-auto w-full border border-gray-300">
            <thead class="bg-gray-100">
                <tr>
                    <th class="border px-4 py-2 text-left">ID</th>
                    <th class="border px-4 py-2 text-left">Name</th>
                    <th class="border px-4 py-2 text-left">Specialization</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var client in clients)
                {
                    <tr>
                        <td class="border px-4 py-2">@client.Id</td>
                        <td class="border px-4 py-2">@client.Name</td>
                        <td class="border px-4 py-2">@client.Specialization</td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <p>No clients found on this page.</p>
    }

    <div class="mt-4 flex gap-2">
        <button type="button"
                class="px-4 py-2 btn btn-primary text-white rounded disabled:opacity-50"
                @onclick="PreviousPage"
                disabled="@(_page == 1)">
            Previous
        </button>

        <span>Page @_page</span>

        <button type="button"
                class="px-4 py-2 btn btn-primary text-white rounded disabled:opacity-50"
                @onclick="NextPage"
                disabled="@(clients == null || !clients.Any())">
            Next
        </button>
    </div>
}

@code {
    private IEnumerable<ClientForGettingDto> clients;
    private int _page = 1;
    private int _pageSize = 10;

    protected override async Task OnInitializedAsync()
    {
        await LoadClientsAsync();
    }

    private async Task LoadClientsAsync()
    {
        clients = await ClientService.GetClientsAsync(_page, _pageSize);
    }

    private async Task NextPage()
    {
        _page++;
        await LoadClientsAsync();
    }

    private async Task PreviousPage()
    {
        if (_page > 1)
        {
            _page--;
            await LoadClientsAsync();
        }
    }
}
